Flyweight is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing 
common parts of state between multiple objects instead of keeping all of the data in each object.



An intrinsic state attribute is stored/shared in the flyweight object, and it is independent of flyweight’s context. 
As the best practice, we should make intrinsic states immutable.

An extrinsic state varies with flyweight’s context, which is why they cannot be shared. 
Client objects maintain the extrinsic state, and they need to pass this to a flyweight object during object creation.

This constant data of an object is usually called the intrinsic state. It lives within the object; other objects can only read it, not change it. 
The rest of the object’s state, often altered “from the outside” by other objects, is called the extrinsic state.