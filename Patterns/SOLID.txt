

1. Single Responsibility Principle (SRP)
Every class, module, or function in a program should have one responsibility/purpose in a program
2. Open–Closed Principle (OCP)
Software entities should be open for extension, but closed for modification.
3. Liskov Substitution Principle (LSP)
Objects of a superclass should be replaceable with objects of its subclasses without breaking the application.
4. Interface Segregation Principle
Clients should not be forced to implement interfaces they don't use. Instead of one fat interface many small interfaces are preferred
5. High-level modules should not depend on low-level modules. Both should depend on abstractions